
local ts = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
local lp = game.Players.LocalPlayer

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Boosts")

-- BOOST SPEED
Section:CreateButton("Boost Speed", function()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local desiredSpeed = 48
    local function applySpeed(humanoid)
        humanoid.WalkSpeed = desiredSpeed
        humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            if humanoid.WalkSpeed ~= desiredSpeed then
                humanoid.WalkSpeed = desiredSpeed
            end
        end)
    end
    local function onCharacterAdded(character)
        local humanoid = character:WaitForChild("Humanoid")
        applySpeed(humanoid)
    end
    if player.Character then onCharacterAdded(player.Character) end
    player.CharacterAdded:Connect(onCharacterAdded)
end)

-- BOOST JUMP
Section:CreateButton("Boost Jump", function()
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local jumpBoostPower = 62
    local boostEnabled = true
    local function onJumpRequest()
        if boostEnabled and humanoid and humanoid.Parent then
            if humanoid.FloorMaterial ~= Enum.Material.Air then
                humanoid.JumpPower = jumpBoostPower
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                delay(0.1, function()
                    if humanoid then humanoid.JumpPower = 50 end
                end)
            end
        end
    end
    UserInputService.JumpRequest:Connect(onJumpRequest)
end)

-- AIR JUMP
Section:CreateButton("Air Jump", function()
    local enabled = true
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local jumpForce = 62
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed or not enabled then return end
        if input.KeyCode == Enum.KeyCode.Space then
            if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                hrp.Velocity = Vector3.new(hrp.Velocity.X, jumpForce, hrp.Velocity.Z)
            end
        end
    end)
    player.CharacterAdded:Connect(function(newChar)
        character = newChar
        humanoid = newChar:WaitForChild("Humanoid")
        hrp = newChar:WaitForChild("HumanoidRootPart")
    end)
end)

-- FLOAT MENU COMPLETO
Section:CreateButton("Float Menu", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/kontrollall/scripts/main/float_ui_menu.lua'))()
end)

-- FLOAT MOBILE (loadstring externo separado)
Section:CreateButton("Float (Mobile)", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/davitrollz/Davitrollz-/refs/heads/main/float.lua'))()
end)

-- FLY MENU
Section:CreateButton("Fly Menu", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/kontrollall/scripts/main/fly_ui_menu.lua'))()
end)
