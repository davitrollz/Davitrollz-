local ts = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
local lp = game.Players.LocalPlayer

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Boosts")

Section:CreateButton("Float (15s) [Mobile+PC]", function()
    -- CONFIGURAÇÕES
    local DURATION_SECONDS = 15         -- Tempo de flutuação
    local FLOAT_HEIGHT = 6              -- Altura acima do chão
    local FLOAT_SPEED = 40              -- Velocidade de movimentação
    local POSITION_FORCE = 25000
    local VELOCITY_FORCE = 25000

    -- SERVIÇOS
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local player = Players.LocalPlayer

    local function setupFloat(character)
        local humanoid = character:WaitForChild("Humanoid")
        local hrp = character:WaitForChild("HumanoidRootPart")

        -- Cria BodyPosition para manter no ar
        local bodyPos = Instance.new("BodyPosition")
        bodyPos.Name = "FloatPosition"
        bodyPos.P = 10000
        bodyPos.D = 1000
        bodyPos.MaxForce = Vector3.zero
        bodyPos.Position = hrp.Position
        bodyPos.Parent = hrp

        -- Cria BodyVelocity para mover no ar
        local bodyVel = Instance.new("BodyVelocity")
        bodyVel.Name = "FloatVelocity"
        bodyVel.P = 1250
        bodyVel.MaxForce = Vector3.zero
        bodyVel.Velocity = Vector3.zero
        bodyVel.Parent = hrp

        -- Ativa força vertical e horizontal
        bodyPos.MaxForce = Vector3.new(0, POSITION_FORCE, 0)
        bodyVel.MaxForce = Vector3.new(VELOCITY_FORCE, 0, VELOCITY_FORCE)

        local running = true

        -- Atualiza posição e movimento a cada frame
        local conn = RunService.Heartbeat:Connect(function()
            if not running then return end

            -- Calcula o solo abaixo
            local rayParams = RaycastParams.new()
            rayParams.FilterDescendantsInstances = {character}
            rayParams.FilterType = Enum.RaycastFilterType.Blacklist

            local ray = workspace:Raycast(hrp.Position, Vector3.new(0, -1000, 0), rayParams)
            local targetY = hrp.Position.Y
            if ray then
                targetY = ray.Position.Y + FLOAT_HEIGHT
            end

            bodyPos.Position = Vector3.new(hrp.Position.X, targetY, hrp.Position.Z)

            -- Move com direção atual do personagem (funciona no celular também)
            local moveDir = humanoid.MoveDirection
            bodyVel.Velocity = Vector3.new(moveDir.X, 0, moveDir.Z) * FLOAT_SPEED
        end)

        -- Finaliza após o tempo
        task.delay(DURATION_SECONDS, function()
            running = false
            if conn then conn:Disconnect() end
            if bodyPos then bodyPos:Destroy() end
            if bodyVel then bodyVel:Destroy() end
        end)

        -- Remove se morrer
        humanoid.Died:Connect(function()
            running = false
            if conn then conn:Disconnect() end
            if bodyPos then bodyPos:Destroy() end
            if bodyVel then bodyVel:Destroy() end
        end)
    end

    -- Aplica no personagem atual
    if player.Character then
        setupFloat(player.Character)
    end

    -- Reativa no respawn (se quiser que funcione novamente após morrer)
    player.CharacterAdded:Connect(function(char)
        task.wait(0.5)
        setupFloat(char)
    end)
end)local ts = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
local lp = game.Players.LocalPlayer

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Boosts")

Section:CreateButton("Float (15s) [Mobile+PC]", function()
    -- CONFIGURAÇÕES
    local DURATION_SECONDS = 15         -- Tempo de flutuação
    local FLOAT_HEIGHT = 6              -- Altura acima do chão
    local FLOAT_SPEED = 40              -- Velocidade de movimentação
    local POSITION_FORCE = 25000
    local VELOCITY_FORCE = 25000

    -- SERVIÇOS
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local player = Players.LocalPlayer

    local function setupFloat(character)
        local humanoid = character:WaitForChild("Humanoid")
        local hrp = character:WaitForChild("HumanoidRootPart")

        -- Cria BodyPosition para manter no ar
        local bodyPos = Instance.new("BodyPosition")
        bodyPos.Name = "FloatPosition"
        bodyPos.P = 10000
        bodyPos.D = 1000
        bodyPos.MaxForce = Vector3.zero
        bodyPos.Position = hrp.Position
        bodyPos.Parent = hrp

        -- Cria BodyVelocity para mover no ar
        local bodyVel = Instance.new("BodyVelocity")
        bodyVel.Name = "FloatVelocity"
        bodyVel.P = 1250
        bodyVel.MaxForce = Vector3.zero
        bodyVel.Velocity = Vector3.zero
        bodyVel.Parent = hrp

        -- Ativa força vertical e horizontal
        bodyPos.MaxForce = Vector3.new(0, POSITION_FORCE, 0)
        bodyVel.MaxForce = Vector3.new(VELOCITY_FORCE, 0, VELOCITY_FORCE)

        local running = true

        -- Atualiza posição e movimento a cada frame
        local conn = RunService.Heartbeat:Connect(function()
            if not running then return end

            -- Calcula o solo abaixo
            local rayParams = RaycastParams.new()
            rayParams.FilterDescendantsInstances = {character}
            rayParams.FilterType = Enum.RaycastFilterType.Blacklist

            local ray = workspace:Raycast(hrp.Position, Vector3.new(0, -1000, 0), rayParams)
            local targetY = hrp.Position.Y
            if ray then
                targetY = ray.Position.Y + FLOAT_HEIGHT
            end

            bodyPos.Position = Vector3.new(hrp.Position.X, targetY, hrp.Position.Z)

            -- Move com direção atual do personagem (funciona no celular também)
            local moveDir = humanoid.MoveDirection
            bodyVel.Velocity = Vector3.new(moveDir.X, 0, moveDir.Z) * FLOAT_SPEED
        end)

        -- Finaliza após o tempo
        task.delay(DURATION_SECONDS, function()
            running = false
            if conn then conn:Disconnect() end
            if bodyPos then bodyPos:Destroy() end
            if bodyVel then bodyVel:Destroy() end
        end)

        -- Remove se morrer
        humanoid.Died:Connect(function()
            running = false
            if conn then conn:Disconnect() end
            if bodyPos then bodyPos:Destroy() end
            if bodyVel then bodyVel:Destroy() end
        end)
    end

    -- Aplica no personagem atual
    if player.Character then
        setupFloat(player.Character)
    end

    -- Reativa no respawn (se quiser que funcione novamente após morrer)
    player.CharacterAdded:Connect(function(char)
        task.wait(0.5)
        setupFloat(char)
    end)
end)
