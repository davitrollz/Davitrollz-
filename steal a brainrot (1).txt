-- CONFIGURAÇÕES INICIAIS
local FLOAT_HEIGHT = 7
local FLOAT_SPEED = 25
local MIN_HEIGHT, MAX_HEIGHT = 2, 15
local MIN_SPEED, MAX_SPEED = 12, 50
local POSITION_FORCE = 25000
local VELOCITY_FORCE = 25000

-- SERVIÇOS
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- ESTADO
local floating = false
local bodyPos, bodyVel
local floatConn
local minimized = false

-- INICIAR FLOAT INFINITO
local function startFloat(char)
	local humanoid = char:WaitForChild("Humanoid")
	local hrp = char:WaitForChild("HumanoidRootPart")

	bodyPos = Instance.new("BodyPosition")
	bodyPos.Name = "FloatPosition"
	bodyPos.P = 10000
	bodyPos.D = 1000
	bodyPos.MaxForce = Vector3.new(0, POSITION_FORCE, 0)
	bodyPos.Position = hrp.Position
	bodyPos.Parent = hrp

	bodyVel = Instance.new("BodyVelocity")
	bodyVel.Name = "FloatVelocity"
	bodyVel.P = 1250
	bodyVel.MaxForce = Vector3.new(VELOCITY_FORCE, 0, VELOCITY_FORCE)
	bodyVel.Velocity = Vector3.zero
	bodyVel.Parent = hrp

	floatConn = RunService.Heartbeat:Connect(function()
		local rayParams = RaycastParams.new()
		rayParams.FilterDescendantsInstances = {char}
		rayParams.FilterType = Enum.RaycastFilterType.Blacklist

		local ray = workspace:Raycast(hrp.Position, Vector3.new(0, -1000, 0), rayParams)
		local targetY = hrp.Position.Y
		if ray then
			targetY = ray.Position.Y + FLOAT_HEIGHT
		end

		bodyPos.Position = Vector3.new(hrp.Position.X, targetY, hrp.Position.Z)

		local moveDir = humanoid.MoveDirection
		bodyVel.Velocity = Vector3.new(moveDir.X, 0, moveDir.Z) * FLOAT_SPEED
	end)

	humanoid.Died:Connect(function()
		stopFloat()
	end)
end

-- PARAR FLOAT
function stopFloat()
	floating = false
	if floatConn then floatConn:Disconnect() end
	if bodyPos then bodyPos:Destroy() end
	if bodyVel then bodyVel:Destroy() end
	updateUI()
end

-- TOGGLE
function toggleFloat()
	floating = not floating
	if floating then
		if player.Character then
			startFloat(player.Character)
		end
	else
		stopFloat()
	end
	updateUI()
end

-- UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FloatMenuUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 200)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Float Menu"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = frame

local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -60, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
minimizeBtn.Text = "–"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 24
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Parent = frame

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = frame

local contentItems = {}
local function addContent(child)
	table.insert(contentItems, child)
	child.Parent = frame
end

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 40)
toggleBtn.Position = UDim2.new(0.05, 0, 0, 40)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.Text = "Float: OFF"
addContent(toggleBtn)
toggleBtn.MouseButton1Click:Connect(toggleFloat)

local heightLabel = Instance.new("TextLabel")
heightLabel.Size = UDim2.new(1, -20, 0, 20)
heightLabel.Position = UDim2.new(0, 10, 0, 90)
heightLabel.Text = "Altura: "..FLOAT_HEIGHT
heightLabel.BackgroundTransparency = 1
heightLabel.TextColor3 = Color3.new(1, 1, 1)
heightLabel.Font = Enum.Font.Gotham
heightLabel.TextSize = 16
heightLabel.TextXAlignment = Enum.TextXAlignment.Left
addContent(heightLabel)

local heightSlider = Instance.new("TextButton")
heightSlider.Size = UDim2.new(1, -20, 0, 20)
heightSlider.Position = UDim2.new(0, 10, 0, 115)
heightSlider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
heightSlider.AutoButtonColor = false
heightSlider.Text = ""
addContent(heightSlider)

local heightFill = Instance.new("Frame")
heightFill.Size = UDim2.new((FLOAT_HEIGHT - MIN_HEIGHT)/(MAX_HEIGHT - MIN_HEIGHT), 0, 1, 0)
heightFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
heightFill.Parent = heightSlider

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 145)
speedLabel.Text = "Velocidade: "..FLOAT_SPEED
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 16
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
addContent(speedLabel)

local speedSlider = Instance.new("TextButton")
speedSlider.Size = UDim2.new(1, -20, 0, 20)
speedSlider.Position = UDim2.new(0, 10, 0, 170)
speedSlider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
speedSlider.AutoButtonColor = false
speedSlider.Text = ""
addContent(speedSlider)

local speedFill = Instance.new("Frame")
speedFill.Size = UDim2.new((FLOAT_SPEED - MIN_SPEED)/(MAX_SPEED - MIN_SPEED), 0, 1, 0)
speedFill.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
speedFill.Parent = speedSlider

local draggingHeight, draggingSpeed = false, false

local function isTouchOrMouse(input)
	return input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch
end

UserInputService.InputEnded:Connect(function(input)
	if isTouchOrMouse(input) then
		draggingHeight = false
		draggingSpeed = false
	end
end)

heightSlider.InputBegan:Connect(function(input)
	if isTouchOrMouse(input) then draggingHeight = true end
end)

speedSlider.InputBegan:Connect(function(input)
	if isTouchOrMouse(input) then draggingSpeed = true end
end)

RunService.RenderStepped:Connect(function()
	local mouseX = UserInputService:GetMouseLocation().X
	if draggingHeight then
		local x = math.clamp(mouseX - heightSlider.AbsolutePosition.X, 0, heightSlider.AbsoluteSize.X)
		local pct = x / heightSlider.AbsoluteSize.X
		FLOAT_HEIGHT = math.floor(MIN_HEIGHT + pct * (MAX_HEIGHT - MIN_HEIGHT))
		heightLabel.Text = "Altura: "..FLOAT_HEIGHT
		heightFill.Size = UDim2.new(pct, 0, 1, 0)
	end
	if draggingSpeed then
		local x = math.clamp(mouseX - speedSlider.AbsolutePosition.X, 0, speedSlider.AbsoluteSize.X)
		local pct = x / speedSlider.AbsoluteSize.X
		FLOAT_SPEED = math.floor(MIN_SPEED + pct * (MAX_SPEED - MIN_SPEED))
		speedLabel.Text = "Velocidade: "..FLOAT_SPEED
		speedFill.Size = UDim2.new(pct, 0, 1, 0)
	end
end)

function updateUI()
	toggleBtn.Text = floating and "Float: ON" or "Float: OFF"
	toggleBtn.BackgroundColor3 = floating and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
end

minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		for _, child in pairs(contentItems) do
			local tween = TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 1, TextTransparency = 1})
			tween:Play()
			tween.Completed:Connect(function() child.Visible = false end)
		end
		local tweenSize = TweenService:Create(frame, TweenInfo.new(0.3), {Size = UDim2.new(frame.Size.X.Scale, frame.Size.X.Offset, 0, 30)})
		tweenSize:Play()
	else
		for _, child in pairs(contentItems) do
			child.Visible = true
			local tween = TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 0, TextTransparency = 0})
			tween:Play()
		end
		local tweenSize = TweenService:Create(frame, TweenInfo.new(0.3), {Size = UDim2.new(0, 280, 0, 200)})
		tweenSize:Play()
	end
end)

closeBtn.MouseButton1Click:Connect(function()
	if floating then stopFloat() end
	if floatConn then floatConn:Disconnect() end
	if toggleKeyConn then toggleKeyConn:Disconnect() end
	local tween = TweenService:Create(frame, TweenInfo.new(0.3), {BackgroundTransparency = 1})
	tween:Play()
	tween.Completed:Connect(function()
		screenGui:Destroy()
	end)
end)

local toggleKeyConn = UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.F then
		toggleFloat()
	end
end)

player.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	wait(0.2)
	if floating then
		startFloat(char)
	end
end)

updateUI()
